// <auto-generated />
using System;
using ConexaDesafio.Dados.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConexaDesafio.Dados.Migrations
{
    [DbContext(typeof(ConexaDesafioDbContext))]
    [Migration("20200804212723_ConexaMigration")]
    partial class ConexaMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConexaDesafio.Negocio.Models.CidadeTemperatura", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CidadesTemperatura");
                });

            modelBuilder.Entity("ConexaDesafio.Negocio.Models.Temperatura", b =>
                {
                    b.Property<int>("TemperaturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("TemperaturaCelsius")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemperaturaId");

                    b.HasIndex("CidadeId");

                    b.ToTable("Temperaturas");
                });

            modelBuilder.Entity("ConexaDesafio.Negocio.Models.Temperatura", b =>
                {
                    b.HasOne("ConexaDesafio.Negocio.Models.CidadeTemperatura", "Cidade")
                        .WithMany("Temperatura")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
